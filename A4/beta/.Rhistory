library(dplyr)
library(magrittr)
library(ggplot2)
library(lubridate)
whole = read.csv("/Users/EriFurusawa/Documents/DataViz/erifurusawa.github.io/A4/data/DSNY_Graffiti_Information.csv")
whole$CREATED_DATE <- whole$CREATED_DATE %>% as.character()
whole <- filter(whole,
is.na (whole$CREATED_DATE) == FALSE)
whole <- filter(whole,
is.na (whole$X_COORDINATE) == FALSE)
whole <- filter(whole, whole$BOROUGH == "MANHATTAN")
for (i in 1: length(whole$RESOLUTION_ACTION)){
# code dispatched
if (whole$RESOLUTION_ACTION[i] %in% c("Cleaning crew dispatched.  Property cleaned.",
"Cleaning crew dispatched.  Cannot locate property.",
"Cleaning crew dispatched.  Owner refused.",
"Cleaning crew dispatched. No graffiti on property.")){
disp <- 1
} else {
disp <- 0
}
whole$dispatched[i] <- disp
# code resolution
if (whole$RESOLUTION_ACTION[i] %>% as.character() %>% substr(1,8)== "Cleaning"){
res <- as.character(whole$RESOLUTION_ACTION[i])
} else if (whole$RESOLUTION_ACTION[i] == "Graffiti Reported"){
res <- "reported"
} else if (whole$RESOLUTION_ACTION[i] == "Graffiti is intentional."){
res <- "Graffiti is intentional"
} else if (whole$RESOLUTION_ACTION[i] %in% c("Notice of Intent to Clean and Forever graffiti free form sent",
"Site downloaded for cleaning",
"Site to be cleaned.",
"Property Research Required")){
res <- "in process"
} else {
res <- "other"
}
whole$resolution[i]<- res
}
for (i in 1:length(whole$CREATED_DATE)){
# code month
wholeDate <- as.character(whole$CREATED_DATE[i])
month <- unlist(strsplit(wholeDate, "/"))[1]
# day <- unlist(strsplit(wholeDate, "/"))[2]
year <- unlist(strsplit(wholeDate, "/"))[3]
shortDate <- paste(year, month, sep = "/")
whole$date[i] <- shortDate
# fix typos with "2047" as the year
if (whole$CLOSED_DATE[i] %>%  substr(7, 10) == "2047"){
typo <- whole$CLOSED_DATE[i]
whole$CLOSED_DATE[i] <- paste(substr(typo, 1, 6), "2017", sep ="")
}
# code process time
if (whole$CLOSED_DATE[i] != ""){
startDate <- whole$CREATED_DATE[i] %>% mdy()
endDate <- whole$CLOSED_DATE[i] %>% mdy()
whole$responseTime[i] <- as.numeric(endDate - startDate)
} else {
whole$responseTime[i] <- "NA"
}
}
whole$responseTime <- as.numeric(whole$responseTime)
# code day of week
for (i in 1: length(whole$CREATED_DATE)){
today <- whole$CREATED_DATE[i] %>% mdy()
beginning <- "01/01/2017" %>% mdy()
days <- (today - beginning) %>%  as.numeric()
if (days %% 7 == 0){
dow <- "Sunday"
} else if (days %% 7 == 1){
dow <- "Monday"
} else if (days %% 7 == 2) {
dow <- "Tuesday"
} else if (days %% 7 == 3) {
dow <- "Wednesday"
} else if (days %% 7 == 4){
dow <- "Thursday"
} else if (days %% 7 == 5){
dow <- "Friday"
} else{
dow <- "Saturday"
}
whole$dow[i] <- dow
if (days %% 7 == 0 || days && 7 == 6){
whole$weekday[i] <- 0
} else {
whole$weekday[i] <- 1
}
}
View(whole)
weekend <- filter(whole, whole$weekday == 0)
weekday <- filter(whole, whole$weekday == 1)
ggplot(weekday, aes(whole$X_COORDINATE, whole$Y_COORDINATE)) + geom_point()
ggplot(weekday, aes(weekday$X_COORDINATE, weekday$Y_COORDINATE)) + geom_point()
ggplot(weekday, aes(weekday$X_COORDINATE, weekday$Y_COORDINATE)) + geom_point()
str(weekday)
ggplot(whole, aes(whole$dow)) + geom_bar()
ggplot(weekday, aes(weekday$dow)) + geom_bar()
ggplot(weekday, aes(weekday[dow])) + geom_bar()
ggplot(weekday, aes(dow)) + geom_bar()
ggplot(weekday, aes(X_COORDINATE, Y_COORDINATE)) + geom_point()
ggplot(weekday, aes(X_COORDINATE, Y_COORDINATE, color = resolution)) + geom_point()
ggplot(weekday, aes(X_COORDINATE, Y_COORDINATE, color = resolution)) + geom_point(size = 0.3)
ggplot(weekend, aes(X_COORDINATE, Y_COORDINATE, color = resolution)) + geom_point(size = 0.3)
ggplot(weekday, aes(X_COORDINATE, Y_COORDINATE, color = resolution)) + geom_point(size = 0.3)
daysofweek <- data.frame()
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$count[p] = daysofweek$count[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
View(daysofweek)
daysofweek <- data.frame()
daysofweek$count <- 0
daysofweek <- data.frame()
daysofweek$count <- 0
daysofweek <- data.frame()
daysofweek$count <- 0
whole$daycount <- 1
daysofweek <- data.frame()
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$count[p] = daysofweek$count[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
View(daysofweek)
daysofweek <- data.frame()
daysofweek$count[p] += 1
daysofweek$count[p] =+ 1
daysofweek$count[p] = daysofweek$count[p] + 1
View(daysofweek)
daysofweek <- data.frame()
whole$daycount <- 1
daysofweek <- data.frame()
whole$daycount <- 1
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$daycount[p] = daysofweek$daycount[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
sum(daysofweek$daycount)
dayssum <- select(daysofweek, weekday, daycount)
View(dayssum)
dayssum <- select(daysofweek, dow, weekday, daycount)
View(dayssum)
dayssum <- dayssum[c(5,2,6,3,4,1,9),]
View(dayssum)
dayssum <- dayssum[c(5,2,6,3,4,1,8),]
View(dayssum)
daysofweek <- data.frame()
whole$daycount <- 1
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$daycount[p] = daysofweek$daycount[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
# code day of week
for (i in 1: length(whole$CREATED_DATE)){
today <- whole$CREATED_DATE[i] %>% mdy()
beginning <- "01/01/2017" %>% mdy()
days <- (today - beginning) %>%  as.numeric()
if (days %% 7 == 0){
dow <- "Sunday"
} else if (days %% 7 == 1){
dow <- "Monday"
} else if (days %% 7 == 2) {
dow <- "Tuesday"
} else if (days %% 7 == 3) {
dow <- "Wednesday"
} else if (days %% 7 == 4){
dow <- "Thursday"
} else if (days %% 7 == 5){
dow <- "Friday"
} else{
dow <- "Saturday"
}
whole$dow[i] <- dow
if (days %% 7 == 0 || days && 7 == 5){
whole$weekday[i] <- 0
} else {
whole$weekday[i] <- 1
}
}
View(whole)
# code day of week
for (i in 1: length(whole$CREATED_DATE)){
today <- whole$CREATED_DATE[i] %>% mdy()
beginning <- "01/01/2017" %>% mdy()
days <- (today - beginning) %>%  as.numeric()
if (days %% 7 == 0){
dow <- "Sunday"
} else if (days %% 7 == 1){
dow <- "Monday"
} else if (days %% 7 == 2) {
dow <- "Tuesday"
} else if (days %% 7 == 3) {
dow <- "Wednesday"
} else if (days %% 7 == 4){
dow <- "Thursday"
} else if (days %% 7 == 5){
dow <- "Friday"
} else{
dow <- "Saturday"
}
whole$dow[i] <- dow
if (days %% 7 == 0 || days %% 7 == 5){
whole$weekday[i] <- 0
} else {
whole$weekday[i] <- 1
}
}
# code day of week
for (i in 1: length(whole$CREATED_DATE)){
today <- whole$CREATED_DATE[i] %>% mdy()
beginning <- "01/01/2017" %>% mdy()
days <- (today - beginning) %>%  as.numeric()
if (days %% 7 == 0){
dow <- "Sunday"
} else if (days %% 7 == 1){
dow <- "Monday"
} else if (days %% 7 == 2) {
dow <- "Tuesday"
} else if (days %% 7 == 3) {
dow <- "Wednesday"
} else if (days %% 7 == 4){
dow <- "Thursday"
} else if (days %% 7 == 5){
dow <- "Friday"
} else{
dow <- "Saturday"
}
whole$dow[i] <- dow
if (days %% 7 == 0 || days %% 7 == 6){
whole$weekday[i] <- 0
} else {
whole$weekday[i] <- 1
}
}
# create new table counting the occurences per location
for (i in 1:length(whole$INCIDENT_ADDRESS)){
# code latlong column
lllist <- paste(whole$X_COORDINATE[i], whole$Y_COORDINATE[i], sep = ",")
whole$latlong[i] <- lllist
}
whole$latlong <- whole$latlong %>% as.character()
whole$count <- 1
occurrences <- data.frame()
for (i in 1:length(whole$INCIDENT_ADDRESS)){
if (whole$latlong[i] %in% occurrences$latlong){
p <- grep(whole$latlong[i], occurrences$latlong)
occurrences$count[p] = occurrences$count[p]+ 1
} else {
occurrences <- rbind(occurrences, whole[i,])
}
}
# create new table counting the number of occurrences per day of week
daysofweek <- data.frame()
whole$daycount <- 1
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$daycount[p] = daysofweek$daycount[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
daysofweek
dayssum <- select(daysofweek, weekday, daycount)
dayssum <- dayssum[c(5,2,6,3,4,1,8),]
dayssum
dayssum <- select(daysofweek, dow, weekday, daycount)
View(dayssum)
dayssum <- dayssum[c(5,2,6,3,4,1,8),]
dayssum <- select(daysofweek, dow, weekday, daycount)
dayssum <- dayssum[c(5,2,6,3,4,1,9),]
View(dayssum)
dayssum <- select(daysofweek, dow, weekday, daycount)
dayssum <- dayssum[c(5,2,6,3,4,1,7),]
View(dayssum)
write.csv(dayssum, "/Users/EriFurusawa/Documents/DataViz/erifurusawa.github.io/A4/beta/dayssum.csv")
View(occurrences)
for (i in 1:length(whole$INCIDENT_ADDRESS)){
if (whole$latlong[i] %in% occurrences$latlong){
p <- grep(whole$latlong[i], occurrences$latlong)
occurrences$count[p] = occurrences$count[p]+ 1
occurrences$dow[p] = paste(occurrences$dow[p], whole$dow[i], sep = ",")
} else {
occurrences <- rbind(occurrences, whole[i,])
}
}
for (i in 1:length(whole$INCIDENT_ADDRESS)){
# code latlong column
lllist <- paste(whole$X_COORDINATE[i], whole$Y_COORDINATE[i], sep = ",")
whole$latlong[i] <- lllist
}
whole$latlong <- whole$latlong %>% as.character()
whole$count <- 1
occurrences <- data.frame()
for (i in 1:length(whole$INCIDENT_ADDRESS)){
if (whole$latlong[i] %in% occurrences$latlong){
p <- grep(whole$latlong[i], occurrences$latlong)
occurrences$count[p] = occurrences$count[p]+ 1
occurrences$dow[p] = paste(occurrences$dow[p], whole$dow[i], sep = ",")
occurrences$weekday[p] = occurrences$weekday[p] + whole$weekday[i]
} else {
occurrences <- rbind(occurrences, whole[i,])
}
}
# create new table counting the number of occurrences per day of week
daysofweek <- data.frame()
whole$daycount <- 1
for (i in 1:length(whole$dow)){
if (whole$dow[i] %in% daysofweek$dow){
p <- grep(whole$dow[i], daysofweek$dow)
daysofweek$daycount[p] = daysofweek$daycount[p] + 1
} else {
daysofweek <- rbind(daysofweek, whole[i,])
}
}
dayssum <- select(daysofweek, dow, weekday, daycount)
dayssum <- dayssum[c(5,2,6,3,4,1,7),]
# export
write.csv(whole, "/Users/EriFurusawa/Documents/DataViz/erifurusawa.github.io/A4/beta/whole.csv")
write.csv(occurrences, "/Users/EriFurusawa/Documents/DataViz/erifurusawa.github.io/A4/beta/occurrences.csv")
write.csv(dayssum, "/Users/EriFurusawa/Documents/DataViz/erifurusawa.github.io/A4/beta/dayssum.csv")
